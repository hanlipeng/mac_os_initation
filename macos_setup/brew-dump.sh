#!/bin/bash

# Script to merge currently installed Homebrew packages with the project's Brewfile.

# Determine the project root directory based on the script's location.
PROJECT_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# Define the path to the main Brewfile.
BREWFILE_PATH="${PROJECT_ROOT}/macos_setup/Brewfile"

# 1. Backup the existing Brewfile
if [ -f "${BREWFILE_PATH}" ]; then
  BACKUP_PATH="${BREWFILE_PATH}.$(date +%Y%m%d%H%M%S).bak"
  echo "ℹ️  Backing up existing Brewfile to ${BACKUP_PATH}"
  cp "${BREWFILE_PATH}" "${BACKUP_PATH}"
fi

# 2. Dump current setup to a temporary file
TEMP_BREWFILE=$(mktemp)
# Ensure the temporary file is removed when the script exits.
trap 'rm -f "$TEMP_BREWFILE"' EXIT

echo "ℹ️  Dumping current Homebrew packages to a temporary file..."
if ! brew bundle dump --file="$TEMP_BREWFILE"; then
  echo "❌ Failed to dump current Homebrew packages."
  exit 1
fi

# 3. Merge, sort, and unique the files
echo "ℹ️  Merging new packages with the existing Brewfile..."
MERGED_CONTENT=$(cat "${BREWFILE_PATH}" "$TEMP_BREWFILE" 2>/dev/null | grep -v '^#' | sort -u)

# 4. Write the result back to the Brewfile
if echo "# Generated by brew-dump.sh on $(date)" > "${BREWFILE_PATH}" && echo "
${MERGED_CONTENT}" >> "${BREWFILE_PATH}"; then
  echo "✅ Brewfile has been successfully merged and updated at: ${BREWFILE_PATH}"
else
  echo "❌ Failed to write the merged content to the Brewfile."
  exit 1
fi